// Code generated by mockery v2.46.0. DO NOT EDIT.

package mocks

import (
	strings "strings"

	mock "github.com/stretchr/testify/mock"
)

// Loader is an autogenerated mock type for the Loader type
type Loader struct {
	mock.Mock
}

type Loader_Expecter struct {
	mock *mock.Mock
}

func (_m *Loader) EXPECT() *Loader_Expecter {
	return &Loader_Expecter{mock: &_m.Mock}
}

// AddConfigPath provides a mock function with given fields: path
func (_m *Loader) AddConfigPath(path string) {
	_m.Called(path)
}

// Loader_AddConfigPath_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AddConfigPath'
type Loader_AddConfigPath_Call struct {
	*mock.Call
}

// AddConfigPath is a helper method to define mock.On call
//   - path string
func (_e *Loader_Expecter) AddConfigPath(path interface{}) *Loader_AddConfigPath_Call {
	return &Loader_AddConfigPath_Call{Call: _e.mock.On("AddConfigPath", path)}
}

func (_c *Loader_AddConfigPath_Call) Run(run func(path string)) *Loader_AddConfigPath_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *Loader_AddConfigPath_Call) Return() *Loader_AddConfigPath_Call {
	_c.Call.Return()
	return _c
}

func (_c *Loader_AddConfigPath_Call) RunAndReturn(run func(string)) *Loader_AddConfigPath_Call {
	_c.Call.Return(run)
	return _c
}

// AutomaticEnv provides a mock function with given fields:
func (_m *Loader) AutomaticEnv() {
	_m.Called()
}

// Loader_AutomaticEnv_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AutomaticEnv'
type Loader_AutomaticEnv_Call struct {
	*mock.Call
}

// AutomaticEnv is a helper method to define mock.On call
func (_e *Loader_Expecter) AutomaticEnv() *Loader_AutomaticEnv_Call {
	return &Loader_AutomaticEnv_Call{Call: _e.mock.On("AutomaticEnv")}
}

func (_c *Loader_AutomaticEnv_Call) Run(run func()) *Loader_AutomaticEnv_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Loader_AutomaticEnv_Call) Return() *Loader_AutomaticEnv_Call {
	_c.Call.Return()
	return _c
}

func (_c *Loader_AutomaticEnv_Call) RunAndReturn(run func()) *Loader_AutomaticEnv_Call {
	_c.Call.Return(run)
	return _c
}

// ConfigFileUsed provides a mock function with given fields:
func (_m *Loader) ConfigFileUsed() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ConfigFileUsed")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Loader_ConfigFileUsed_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ConfigFileUsed'
type Loader_ConfigFileUsed_Call struct {
	*mock.Call
}

// ConfigFileUsed is a helper method to define mock.On call
func (_e *Loader_Expecter) ConfigFileUsed() *Loader_ConfigFileUsed_Call {
	return &Loader_ConfigFileUsed_Call{Call: _e.mock.On("ConfigFileUsed")}
}

func (_c *Loader_ConfigFileUsed_Call) Run(run func()) *Loader_ConfigFileUsed_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Loader_ConfigFileUsed_Call) Return(_a0 string) *Loader_ConfigFileUsed_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *Loader_ConfigFileUsed_Call) RunAndReturn(run func() string) *Loader_ConfigFileUsed_Call {
	_c.Call.Return(run)
	return _c
}

// ReadInConfig provides a mock function with given fields:
func (_m *Loader) ReadInConfig() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ReadInConfig")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Loader_ReadInConfig_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ReadInConfig'
type Loader_ReadInConfig_Call struct {
	*mock.Call
}

// ReadInConfig is a helper method to define mock.On call
func (_e *Loader_Expecter) ReadInConfig() *Loader_ReadInConfig_Call {
	return &Loader_ReadInConfig_Call{Call: _e.mock.On("ReadInConfig")}
}

func (_c *Loader_ReadInConfig_Call) Run(run func()) *Loader_ReadInConfig_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Loader_ReadInConfig_Call) Return(_a0 error) *Loader_ReadInConfig_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *Loader_ReadInConfig_Call) RunAndReturn(run func() error) *Loader_ReadInConfig_Call {
	_c.Call.Return(run)
	return _c
}

// SetConfigName provides a mock function with given fields: name
func (_m *Loader) SetConfigName(name string) {
	_m.Called(name)
}

// Loader_SetConfigName_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetConfigName'
type Loader_SetConfigName_Call struct {
	*mock.Call
}

// SetConfigName is a helper method to define mock.On call
//   - name string
func (_e *Loader_Expecter) SetConfigName(name interface{}) *Loader_SetConfigName_Call {
	return &Loader_SetConfigName_Call{Call: _e.mock.On("SetConfigName", name)}
}

func (_c *Loader_SetConfigName_Call) Run(run func(name string)) *Loader_SetConfigName_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *Loader_SetConfigName_Call) Return() *Loader_SetConfigName_Call {
	_c.Call.Return()
	return _c
}

func (_c *Loader_SetConfigName_Call) RunAndReturn(run func(string)) *Loader_SetConfigName_Call {
	_c.Call.Return(run)
	return _c
}

// SetConfigType provides a mock function with given fields: configType
func (_m *Loader) SetConfigType(configType string) {
	_m.Called(configType)
}

// Loader_SetConfigType_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetConfigType'
type Loader_SetConfigType_Call struct {
	*mock.Call
}

// SetConfigType is a helper method to define mock.On call
//   - configType string
func (_e *Loader_Expecter) SetConfigType(configType interface{}) *Loader_SetConfigType_Call {
	return &Loader_SetConfigType_Call{Call: _e.mock.On("SetConfigType", configType)}
}

func (_c *Loader_SetConfigType_Call) Run(run func(configType string)) *Loader_SetConfigType_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *Loader_SetConfigType_Call) Return() *Loader_SetConfigType_Call {
	_c.Call.Return()
	return _c
}

func (_c *Loader_SetConfigType_Call) RunAndReturn(run func(string)) *Loader_SetConfigType_Call {
	_c.Call.Return(run)
	return _c
}

// SetEnvKeyReplacer provides a mock function with given fields: replacer
func (_m *Loader) SetEnvKeyReplacer(replacer *strings.Replacer) {
	_m.Called(replacer)
}

// Loader_SetEnvKeyReplacer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetEnvKeyReplacer'
type Loader_SetEnvKeyReplacer_Call struct {
	*mock.Call
}

// SetEnvKeyReplacer is a helper method to define mock.On call
//   - replacer *strings.Replacer
func (_e *Loader_Expecter) SetEnvKeyReplacer(replacer interface{}) *Loader_SetEnvKeyReplacer_Call {
	return &Loader_SetEnvKeyReplacer_Call{Call: _e.mock.On("SetEnvKeyReplacer", replacer)}
}

func (_c *Loader_SetEnvKeyReplacer_Call) Run(run func(replacer *strings.Replacer)) *Loader_SetEnvKeyReplacer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*strings.Replacer))
	})
	return _c
}

func (_c *Loader_SetEnvKeyReplacer_Call) Return() *Loader_SetEnvKeyReplacer_Call {
	_c.Call.Return()
	return _c
}

func (_c *Loader_SetEnvKeyReplacer_Call) RunAndReturn(run func(*strings.Replacer)) *Loader_SetEnvKeyReplacer_Call {
	_c.Call.Return(run)
	return _c
}

// SetEnvPrefix provides a mock function with given fields: prefix
func (_m *Loader) SetEnvPrefix(prefix string) {
	_m.Called(prefix)
}

// Loader_SetEnvPrefix_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetEnvPrefix'
type Loader_SetEnvPrefix_Call struct {
	*mock.Call
}

// SetEnvPrefix is a helper method to define mock.On call
//   - prefix string
func (_e *Loader_Expecter) SetEnvPrefix(prefix interface{}) *Loader_SetEnvPrefix_Call {
	return &Loader_SetEnvPrefix_Call{Call: _e.mock.On("SetEnvPrefix", prefix)}
}

func (_c *Loader_SetEnvPrefix_Call) Run(run func(prefix string)) *Loader_SetEnvPrefix_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *Loader_SetEnvPrefix_Call) Return() *Loader_SetEnvPrefix_Call {
	_c.Call.Return()
	return _c
}

func (_c *Loader_SetEnvPrefix_Call) RunAndReturn(run func(string)) *Loader_SetEnvPrefix_Call {
	_c.Call.Return(run)
	return _c
}

// Unmarshal provides a mock function with given fields: rawVal
func (_m *Loader) Unmarshal(rawVal interface{}) error {
	ret := _m.Called(rawVal)

	if len(ret) == 0 {
		panic("no return value specified for Unmarshal")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(rawVal)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Loader_Unmarshal_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Unmarshal'
type Loader_Unmarshal_Call struct {
	*mock.Call
}

// Unmarshal is a helper method to define mock.On call
//   - rawVal interface{}
func (_e *Loader_Expecter) Unmarshal(rawVal interface{}) *Loader_Unmarshal_Call {
	return &Loader_Unmarshal_Call{Call: _e.mock.On("Unmarshal", rawVal)}
}

func (_c *Loader_Unmarshal_Call) Run(run func(rawVal interface{})) *Loader_Unmarshal_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(interface{}))
	})
	return _c
}

func (_c *Loader_Unmarshal_Call) Return(_a0 error) *Loader_Unmarshal_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *Loader_Unmarshal_Call) RunAndReturn(run func(interface{}) error) *Loader_Unmarshal_Call {
	_c.Call.Return(run)
	return _c
}

// NewLoader creates a new instance of Loader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewLoader(t interface {
	mock.TestingT
	Cleanup(func())
}) *Loader {
	mock := &Loader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
